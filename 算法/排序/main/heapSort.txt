var utils = require('../utils')

var swap = utils.swap;


module.exports.sort = function(arr){
    buildHeap(arr)
}

var buildHeap = function(arr){
    let n = arr.length;
    while(--n >= 0){
        heapifyBig(arr, arr.length, n)
    }

    return arr
}

var heapifyBig = function(arr, len, i){
    while(true){
        let maxPos = i;
        if(i*2+1 < len && arr[i*2+1] > arr[maxPos]){
            maxPos = i*2+1
        }

        if(i*2+2 < len && arr[i*2+2] > arr[maxPos]){
            maxPos = i*2 +2
        }
        
        if(maxPos === i){
            break;
        }

        swap(arr, i, maxPos)
        i = maxPos
    }
}


function adjustMaxHeap(heap,head,heapSize){
    let temp = heap[head];
    let child = head * 2 + 1;
    while(child < heapSize){
        if(child+1 < heapSize && heap[child] < heap[child+1]) child++;
        if(heap[head] < heap[child]){
            heap[head] = heap[child];
            head = child;
            child = head * 2 + 1;
        }else break;
        heap[head] = temp;
    }
}

function buildHeap(heap){
    for(let i = (heap.length-1) >> 1;i >= 0;i--){
        adjustMaxHeap(heap,i,heap.length);
    }
}

function heapSort(arr){
    buildHeap(arr);
    for(let i = arr.length-1;i > 0;i--){
        [arr[i],arr[0]] = [arr[0],arr[i]];
        adjustMaxHeap(arr,0,i);
    }
    return arr;
}
